plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '0.7.5a'
group = 'com.tjk.technokrafttweaks' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'technokrafttweaks'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.19.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'technokrafttweaks'

            mods {
                technokrafttweaks {
                    source sourceSets.main
                }
            }
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'technokrafttweaks'

            mods {
                technokrafttweaks {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for storage_block run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'technokrafttweaks'

            mods {
                technokrafttweaks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'technokrafttweaks', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                technokrafttweaks {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    //Curse
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    //Create
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    //Thermal
    maven { url 'https://maven.covers1624.net/' }
    maven { url 'https://maven.tterrag.com/' }
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://maven.blamejared.com/' }
    maven { url 'https://maven.theillusivec4.top/' }
    //JEI
    maven {
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.21'

    //CTM
    runtimeOnly fg.deobf("curse.maven:ctm-267602:4393695")
    //AE2
    runtimeOnly fg.deobf("curse.maven:appliedenergistics2-223794:4733119")
    //Create
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrate_version}")
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${flywheel_minecraft_version}:${flywheel_version}")
    implementation fg.deobf("com.simibubi.create:create-${create_minecraft_version}:${create_version}:slim") { transitive = false }
    runtimeOnly fg.deobf("curse.maven:createliquidfuel-840734:4686610")
    //Thermal
    implementation fg.deobf("com.teamcofh:cofh_core:1.19.2-10.3.0.46")
    implementation fg.deobf("com.teamcofh:thermal_core:1.19.2-${thermal_core_version}.+")
    runtimeOnly fg.deobf("com.teamcofh:thermal_foundation:1.19.2-10.2.0.47")
    runtimeOnly fg.deobf("com.teamcofh:thermal_expansion:1.19.2-${thermal_core_version}.+")
    runtimeOnly fg.deobf("com.teamcofh:thermal_innovation:1.19.2-${thermal_core_version}.+")
    runtimeOnly fg.deobf("curse.maven:tools_complement-552642:4759897")
    //Architects Palette
    runtimeOnly fg.deobf("curse.maven:architects_palette-433862:4677249")
    //JEI
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
    //Ender Storage
    runtimeOnly fg.deobf("curse.maven:CodeChickenLib-242818:4382729")
    runtimeOnly fg.deobf("curse.maven:EnderStorage-245174:3951059")
    //KubeJS
    runtimeOnly fg.deobf("curse.maven:architectury-419699:4555749")
    runtimeOnly fg.deobf("curse.maven:rhinor-416294:4715267")
    runtimeOnly fg.deobf("curse.maven:kubejs-238086:4744432")
    //World Stripper
    runtimeOnly fg.deobf("curse.maven:worldstripper-250603:3921630")
    //Biomes O' Plenty
    runtimeOnly fg.deobf("curse.maven:TerraBlender-563928:4618490")
    implementation fg.deobf("curse.maven:BiomesOPlenty-220318:4473556")
    //Spiky Spikes
    runtimeOnly fg.deobf("curse.maven:examplemod-666944:4426414")
    runtimeOnly fg.deobf("curse.maven:puzzleslib-495476:4600775")
    //Storage Drawers
    runtimeOnly fg.deobf("curse.maven:storagedrawers-223852:3884263")
    //Pipez
    runtimeOnly fg.deobf("curse.maven:pipez-443900:4713644")
    //Iron Chest
    runtimeOnly fg.deobf("curse.maven:iron-chests-228756:3966365")
    //Sophisticated Backpacks
    runtimeOnly fg.deobf("curse.maven:sophisticated-core-618298:4736641")
    runtimeOnly fg.deobf("curse.maven:sophisticated-backpacks-422301:4736644")
    //Metal Barrels
    runtimeOnly fg.deobf("curse.maven:metal-barrels-324985:4056303")
    //Farmer Delight
    runtimeOnly fg.deobf("curse.maven:farmers-delight-398521:4679318")
    //Apple Skin
    runtimeOnly fg.deobf("curse.maven:appleskin-248787:3872808")
    //Time In A Bottle
    runtimeOnly fg.deobf("curse.maven:time-in-a-bottle-standalone-445025:3879896")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "technokrafttweaks",
                "Specification-Vendor"    : "technokrafttweaks",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "technokrafttweaks",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
